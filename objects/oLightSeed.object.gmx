<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-16</depth>
  <persistent>0</persistent>
  <parentName>oLightSource</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

image_speed = 0.1;

//Expansion Range
vExpandSine += floor( random( 90 ) );
vExpandLimit = 8

//Range Definitions
rangeBright = 16;
rangeNormal = 24;
rangeDarken = 48;

//Correct Light Range
if (vExpandLimit &gt;= rangeBright-1) {
    vExpandLimit = rangeBright-2;
    }
    
//
vCapture = false;
vNear = false; 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Move by cloud
if (collision_rectangle( x-3, y-3, x+3, y+3, oGas, 1, 1) &amp;&amp; speed == 0 ) {
    var gas = collision_rectangle( x-3, y-3, x+3, y+3, oGas, 1, 1);
    speed = gas.speed/2;
    direction = gas.direction;
    with (gas) {
        instance_destroy();
        }
    } 

//Bottom Collision
if (collision_rectangle( x-1, y+3, x+1, y+4, oBlock, 1, 1)) {
    var block = collision_rectangle( x-1, y+3, x+1, y+4, oBlock, 1, 1);
    vspeed = -vspeed;
    y = block.y-4;
    }
    
//Top Collision
if (collision_rectangle( x-1, y-3, x+1, y-4, oBlock, 1, 1)) {
    var block = collision_rectangle( x-1, y-3, x+1, y-4, oBlock, 1, 1);
    vspeed = -vspeed;
    y = block.y+4 + 16;
    }

//Right Collision
if (collision_rectangle( x+3, y-1, x+4, y+1, oBlock, 1, 1)) {
    var block = collision_rectangle( x+3, y-1, x+4, y+1, oBlock, 1, 1);
    hspeed = -hspeed;
    x = block.x-4;
    }
      
//Left Collision
if (collision_rectangle( x-3, y-1, x-4, y+1, oBlock, 1, 1)) {
    var block = collision_rectangle( x-3, y-1, x-4, y+1, oBlock, 1, 1);
    hspeed = -hspeed;
    x = block.x+4 + 16;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (image_index &gt;= 2) {
    image_index = 0;
    }

if (vExpandSine%180 == 15) &amp;&amp; (speed == 0) {
    instance_create(x + dsin(vExpandSine)*2, y + dsin(vExpandSine + 90)*2, oParticleSeedRing);
    }

//Nearest
vNear = false;
with (oPlayer) {
    if (instance_nearest( x, y, oLightSeed) == other){
        other.vNear = true;
        }
    }

if (vNear) {
    depth = -17;
    } else {
    depth = -16;
    }
    
//Enable capture
if (vNear) &amp;&amp; ( point_distance( x, y, oPlayer.x, oPlayer.y ) &lt; 64 ) {
    if ( (keyboard_check(ord( 'X' )) || (mouse_check_button( mb_right )) )
        &amp;&amp; oPlayer.vLights &lt; oPlayer.vLightsLimit) {
        
        speed = 0;
        vCapture = true;
        }
    } else {
        vCapture = false;
        }
        
//Move to player upon close range
if (vCapture) {
    var len = point_distance( x, y, oPlayer.x, oPlayer.y );
    var dir = point_direction( x, y, oPlayer.x, oPlayer.y );
    x += lengthdir_x( ((64 - len) / 16), dir );
    y += lengthdir_y( ((64 - len) / 16), dir );
    
    if ( point_distance( x, y, oPlayer.x, oPlayer.y ) &lt; 8 ) {
        oPlayer.vLights++;
        oPlayerLight.vBurstSine = 1;
        instance_destroy();
        }
    
    }

//Slow movement 
/*
if (hspeed!=0) {
    hspeed -= sign(hspeed)*0.1;
    }
if (vspeed!=0) {
    vspeed -= sign(vspeed)*0.1;
    }   
    */

if (speed &gt; 0) {
    speed -= 0.1;
    }    

if (speed &lt;= 0.1) {
    speed = 0;
    }
    
if collision_rectangle( x - 3 + hspeed, y - 3 + vspeed, x + 3 + hspeed, y + 3 + vspeed, oLightSeed, 1, 1) {
    var obj = collision_rectangle( x - 3 + hspeed, y - 3 + vspeed, x + 3 + hspeed, y + 3 + vspeed, oLightSeed, 1, 1);
    
    motion_add( point_direction( obj.x, obj.y, x, y ), 0.4);
    with (obj) {
        motion_add( point_direction( x, y, other.x, other.y ) + 180, 0.4);
        }
    }
    
    //x += (sign( oPlayer.x - x) * (32 - (abs( oPlayer.x) - abs(x) )) ) / 16;
    //total - difference * distance
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

//draw_sprite( spr_lightSeed, 0, x, y );
draw_sprite( spr_lightSeed, image_index, x + dsin(vExpandSine)*2, y + dsin(vExpandSine + 90)*2)

if ( point_distance( x, y, oPlayer.x, oPlayer.y ) &lt; 64 ) &amp;&amp; !(vCapture) &amp;&amp; (speed == 0) {
    draw_set_halign( fa_center );
    
    if (vNear) {
        draw_set_colour( global.c_pRed);
        } else {
        draw_set_colour( global.c_pBlue);
        }
    if( oPlayer.vLights == oPlayer.vLightsLimit) { //If your player has a full light count
    
        draw_set_colour( global.c_pBlue);
        draw_text( x+2, y - 16, "[full]");
        
        } else {  //Grab Button
        if (global.controlMode == 0) {
                draw_text( x+2, y - 16, "[x]");
                }
        if (global.controlMode == 1) {
            draw_text( x+2, y - 16, "[RMB]");
            }
        }
    }
    
draw_set_halign( fa_left );
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
