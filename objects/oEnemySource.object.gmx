<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-19</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//
vOffset = floor( random(180) );
vChase = false;
vSpotted = false;
vSpeedCap = 0;
ox = x;
oy = y;

vDamage = 2;
vSprite = spr_enemyPuff;
vChaseRange = 128;
vHP = 100;
vSpeedCapOrig = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(x, y, oParticleSeedRing);

audio_play_sound( snd_death, 2, 0);

repeat( 15 ) {
    bub = instance_create( x, y, oParticleBubble );
    bub.hspeed = random(1) - random(1);
    bub.vspeed = random(4) - random(1);
    }
    
for (var rot = 0; rot &lt; 360; rot += (360/16) ) {
    var deathLight = instance_create( x, y, oGas );
    deathLight.direction = rot;
    deathLight.speed = 3 + random(2);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Lock in place while editing
if (oEditor.vMode) {
    speed = 0;
    x = ox;
    y = oy;
    }

//death
if (vHP &lt;= 0) {
    vHp = 100;
    instance_destroy();
    }
    
//Move by cloud
if (collision_rectangle( x-8, y-8, x+8, y+8, oGas, 1, 1) ) {
    vHP -= global.strength/100;
    var gas = collision_rectangle( x-8, y-8, x+8, y+8, oGas, 1, 1);
    motion_add( gas.direction, gas.speed/16 );
    with (gas) {
        instance_destroy();
        }
    } 
    
//Hit Player
if (collision_rectangle( x-4, y-4, x+4, y+4, oPlayer, 1, 1) ) {
    var player = collision_rectangle( x-4, y-4, x+4, y+4, oPlayer, 1, 1);
    motion_add( point_direction( oPlayer.x, oPlayer.y, x, y), 3 );
    
    audio_play_sound( snd_hurt, 2, 0);
    //global.killFish += vDamage;
    
    with (player) {
        motion_add( point_direction( other.x, other.y, x, y), 2 );
        }
    } 
    
    
//Bottom Collision
if (collision_rectangle( x-1, y+3, x+1, y+4, oBlock, 1, 1)) {
    var block = collision_rectangle( x-1, y+3, x+1, y+4, oBlock, 1, 1);
    vspeed = -vspeed;
    y = block.y-4;
    if ( abs(vspeed) &gt; 0.5) {
        audio_play_sound( snd_bump, 2, 0);
        } else if (vspeed!=0) &amp;&amp; !(audio_is_playing( snd_bump)) {
            audio_play_sound( snd_bump, 2, 0);
            }
    }
    
//Top Collision
if (collision_rectangle( x-1, y-3, x+1, y-4, oBlock, 1, 1)) {
    var block = collision_rectangle( x-1, y-3, x+1, y-4, oBlock, 1, 1);
    vspeed = -vspeed;
    y = block.y+4 + 16;
    if ( abs(vspeed) &gt; 0.5) {
        audio_play_sound( snd_bump, 2, 0);
        } else if (vspeed!=0) &amp;&amp; !(audio_is_playing( snd_bump)) {
            audio_play_sound( snd_bump, 2, 0);
            }
    }

//Right Collision
if (collision_rectangle( x+3, y-1, x+4, y+1, oBlock, 1, 1)) {
    var block = collision_rectangle( x+3, y-1, x+4, y+1, oBlock, 1, 1);
    hspeed = -hspeed;
    x = block.x-4;
    if ( abs(hspeed) &gt; 0.5) {
        audio_play_sound( snd_bump, 2, 0);
        } else if (hspeed!=0) &amp;&amp; !(audio_is_playing( snd_bump)) {
            audio_play_sound( snd_bump, 2, 0);
            }
    }
      
//Left Collision
if (collision_rectangle( x-3, y-1, x-4, y+1, oBlock, 1, 1)) {
    var block = collision_rectangle( x-3, y-1, x-4, y+1, oBlock, 1, 1);
    hspeed = -hspeed;
    x = block.x+4 + 16;
    if ( abs(hspeed) &gt;= 0.5) {
        audio_play_sound( snd_bump, 2, 0);
        } else if (hspeed!=0) &amp;&amp; !(audio_is_playing( snd_bump)) {
            audio_play_sound( snd_bump, 2, 0);
            }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//
depth = -19;
vOffset++;
vOffset = vOffset%360;

//Enable chase
if ( point_distance( x, y, oPlayer.x, oPlayer.y ) &lt; vChaseRange ) {
    vChase = true;
    }
    
if ( point_distance( x, y, oPlayer.x, oPlayer.y ) &lt; ( oPlayerLight.rangeDarken + oPlayerLight.vExpand ) ) {
    vSpotted = true;
    }

if ( point_distance( x, y, oPlayer.x, oPlayer.y ) &gt; vChaseRange*1.5 ) {
    vChase = false;
    vSpotted = false;
    }    
        
//Move to player upon close range
if (vChase) {
    var dir = point_direction( x, y, oPlayer.x + oPlayer.hspeed - hspeed, oPlayer.y + oPlayer.vspeed - vspeed );
    motion_add( dir, 0.1 );
    }

//Speed cap

if !(vSpotted) {
    vSpeedCap = 0.5;
    } else {
    vSpeedCap = vSpeedCapOrig;
    }
    
if (speed &gt; vSpeedCap) {
    speed = vSpeedCap;
    }
    
if (speed &gt; 0) &amp;&amp; !(vChase) {
    speed -= 0.1;
    }    

if (speed &lt;= 0.1) &amp;&amp; !(vChase) {
    speed = 0;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

draw_sprite( vSprite , vChase*vSpotted, x + dsin(vOffset)*2, y + dsin(vOffset + 90)*2)

if ( vChase ) &amp;&amp; (vSpotted) {
    draw_set_halign( fa_center );
    draw_set_colour( global.c_pBlack);
    draw_text( x+3, y - 23, string( ceil(vHP) ));
    draw_set_colour( global.c_pRed);
    draw_text( x+2, y - 24, string( ceil(vHP) ));
    }
    
draw_set_halign( fa_left );
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
