<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-510</depth>
  <persistent>0</persistent>
  <parentName>oGUI</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if keyboard_check(vk_escape) { game_end(); }

if (
    keyboard_check( vk_up ) ||
    keyboard_check( vk_left ) ||
    keyboard_check( vk_right ) ||
    keyboard_check( vk_down ) ||
    keyboard_check( ord('Z') ) ||
    keyboard_check( ord('X') ) ||
    keyboard_check( ord('C') )
    ) {
        global.controlMode = 0;
        }
    
if (
    keyboard_check( ord('W') ) ||
    keyboard_check( ord('A') ) ||
    keyboard_check( ord('S') ) ||
    keyboard_check( ord('D') ) ||
    keyboard_check( ord('E') ) ||
    mouse_check_button( mb_left ) ||
    mouse_check_button( mb_right )
    ) {
        global.controlMode = 1;
        }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font( fn_base );
//draw_sprite( spr_HUDbar, 0, view_xview[0], view_yview[0] );

draw_sprite( spr_HUDbar, 1, view_xview[0], view_yview[0] + 1);
draw_sprite( spr_HUDbar, 1, view_xview[0], view_yview[0] + view_hview[0] - 17);

draw_sprite( spr_HUDbar, 0, view_xview[0], view_yview[0]);
draw_sprite( spr_HUDbar, 0, view_xview[0], view_yview[0] + view_hview[0] - 16);

//UPPER

//Quit key
draw_set_halign( fa_left );
draw_set_colour( global.c_pWhite );
draw_text( view_xview[0] + 3, view_yview[0] , "[esc] quit" );

//Title
draw_set_halign( fa_center);
draw_set_colour( global.c_pWhite );
draw_text( view_xview[0] + view_wview[0]/2, view_yview[0] , "MOTHERSEA (c) paul cho 2017" ); 

//Version
//Fullscreen
draw_set_halign( fa_right );
draw_set_colour( c_white );
draw_text( view_xview[0] + view_wview[0] - 3, view_yview[0] , "ver. 1.01");


//MID/GAMEPLAY HUD
var stren = string(global.strength);
if (global.strength &lt; 100) {
    stren = " " + stren;
    }
draw_set_halign( fa_center);

draw_set_colour( global.c_pBlack );
draw_text( 1 + view_xview[0] + view_wview[0]/2, 1 + view_yview[0] + 3*(view_hview[0]/4) , "ATTACK: " + stren + "%" ); 

draw_set_colour( global.c_pWhite );
draw_text( view_xview[0] + view_wview[0]/2, view_yview[0] + 3*(view_hview[0]/4) , "ATTACK: " + stren + "%" ); 
 




//LOWER


//FPS
draw_set_halign( fa_left );
draw_set_colour( c_white );
draw_text( view_xview[0] + 3, view_yview[0] + view_hview[0] - 16, "FPS: " + string(fps) + " / " + string(fps_real));

//Fullscreen
draw_set_halign( fa_right );
draw_set_colour( c_white );
draw_text( view_xview[0] + view_wview[0] - 3, view_yview[0] + view_hview[0] - 16, "[space]+[f] fullscreen");

//Credits
//draw_set_halign( fa_right );
//draw_set_colour( global.c_pBlue );
//draw_text( view_xview[0] + view_wview[0] - 3, view_yview[0] + view_hview[0] - 40, "art, music, and progamming by PAUL CHO [2017]");
//draw_text( view_xview[0] + view_wview[0] - 3, view_yview[0] + view_hview[0] - 30, "m3x6 font by DANIEL LINNSEN [2016]");
//draw_set_halign( fa_left );
//draw_text( view_xview[0] + 3, view_yview[0] + view_hview[0] - 30, "MOTHERSEA 2017, mimusic/PAUL CHO");

//Control Scheme: Keyboard
if (global.controlMode == 0) {
    
    draw_set_halign( fa_center );
    draw_set_colour( c_white );
    draw_text( view_xview[0] + (view_wview[0]/2), view_yview[0] + view_hview[0] - 16, "[z] cycle     [x] interact     [c] throw / attack");
    }

//Control Scheme: Keyboard &amp; Mouse
if (global.controlMode == 1) {

    draw_set_halign( fa_center );
    draw_set_colour( c_white );
    draw_text( view_xview[0] + (view_wview[0]/2), view_yview[0] + view_hview[0] - 16, "[E] cycle     [LMB] throw / attack     [RMB] interact");
    }
    
//Mouse: this should always be last
draw_set_halign( fa_left );
draw_sprite( spr_cursor, 0, mouse_x, mouse_y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
